EXECNAME
{gpcdget.i "UT"}

validate(v_date <> "" ,"message information")

&IF DEFINED(GPLABEL_I)=0 &THEN
&GLOBAL-DEFINE GPLABEL_I

mfdecgui.i global_program_name global_program_rev

fill(" ",25)

{pxmsg.i &MSGNUM=4693 &ERRORLEVEL=1 &MSGBUFFER=lit-text}
{pxmsg.i &MSGNUM=80402 &ERRORLEVEL={&INFORMATION-RESULT} &CONFIRM=yn} 
{mfmsg.i 5543 3}
{mfmsg01.i 5544 2 yn}

prompt-for lang mndnbr with frame a editing:
if frame-field = "lang" then do:
next-prompt pt_prod_line with frame a1.
setframelabels(frame a:handle).
do transaction:
{gpselout.i &pagedflag = "nopage" | ""} 报表分页
{gprunp.i "xxa" "p" "test" "(input 2333,output xxx)"}
{t001.i}  /*ppplrp.p*/
getFrameTitle("TOTALS",16)

/*CIM_LOAD*/
    batchrun  = yes.
    input from value(fname).
    output to value(fname + ".out") keep-messages.
    hide message no-pause.
    cimrunprogramloop:
    do on stop undo cimrunprogramloop,leave cimrunprogramloop:
          {gprun.i ""ppcsbtld.p""}
    end.
    hide message no-pause.
    output close.
    input close.
    batchrun  = no.


{pxrun.i &PROC       = 'processRead' &PROGRAM ='sccexr.p'
      &PARAM      = "(input  sct_sim,
        input  element,
        buffer sc_mstr,
        input  {&NO_LOCK_FLAG},
        input  {&NO_WAIT_FLAG})"
      &NOAPPERROR = true
      &CATCHERROR = true
      }
turncate()
round()
length(pi_desc,"RAW")
ENTRY(1, aLine)
随机数 RANDOM ( low , high )

input through echo value(tt_f1) no-echo.

/*写common*/
mpmpmt.p
   if mpd_cmtindx <> 0 then
      comments = yes.
   else
      comments = no.
   update comments with frame d.
   if comments then do:
      cmtindx = mpd_cmtindx.
      global_ref = mpd_nbr + mpd_type.
      {gprun.i ""gpcmmt01.p"" "(input ""mpd_det"")"}
      mpd_cmtindx = cmtindx.
      view frame a.
      view frame b.
   end.

/*产生单号  GN */
注意：seq-internal = yes
/*GN*/ {mfdeclre.i}
/*GN*/ define variable v_number as character format "x(12)".
/*GN*/ define variable errorst as logical.
/*GN*/ define variable errornum as integer.
/*GN*/ define variable xx as character initial "xxwa_det".
/*GN*/
/*GN*/ {gprun.i ""gpnrmgv.p"" "(xx,input-output v_number, output errorst
/*GN*/                           ,output errornum)" }
/*GN*/
/*GN*/ message "v_number:" v_number skip
/*GN*/        "errorst:" errorst skip
/*GN*/       "errornum:" errornum
/*GN*/ view-as alert-box.

mrmprp1a.p
display
  getTermLabel("GROSS_REQUIREMENTS",13) format "x(13)"
  req[1] format "->>>>>>>>9"
  req[2 for 12] skip.

for first pin_mstr where pin_product = pApplication no-lock: end.
if available pin_mstr and pin_mstr.pin_hwm < hwm_cnt then do:
   find current pin_mstr exclusive-lock no-error.
   pin_hwm = hwm_cnt.
   if recid(pin_mstr) = -1 then .
end.
/**label reference******************
mrmprp11.p   D)日/W)周/M)月: W
	     按I)零件或B)物料单/配料排序: I)零件号

wocswip.p    D)细节/S)汇总: D)细节
bmcsru01.p   A)全部/C)仅限变更: A)全部
************************************/
