<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="defChar" Comments="0" Strings="0">define variable ^ as character no-undo.&#xD;
</Template><Template Name="defLike" Comments="0" Strings="0">define variable ^ like no-undo.&#xD;
</Template><Template Name="defInteger" Comments="0" Strings="0">define variable ^ as integer no-undo.&#xD;
</Template><Template Name="defDecimal" Comments="0" Strings="0">define variable ^ as decimail no-undo.&#xD;
</Template><Template Name="defDate" Comments="0" Strings="0">define variable ^ as date no-undo.&#xD;
</Template><Template Name="defLogical" Comments="0" Strings="0">define variable ^ as logical no-undo.&#xD;
</Template><Template Name="defTempTable" Comments="0" Strings="0">Define temp-table [+tablename+]&#xD;
       fields&#xD;
       index is primary.</Template><Template Name="DefForm" Comments="0" Strings="0">form&#xD;
   space(1)&#xD;
    &#xD;
with frame [+formname+] side-labels width 80.&#xD;
setFrameLabels(frame [+formname+]:handle).&#xD;
</Template><Template Name="for each" Comments="0" Strings="0">for each ^ no-lock where :&#xD;
&#xD;
end.&#xD;
</Template><Template Name="procedure" Comments="0" Strings="0">PROCEDURE [+ProcedureName+]:&#xD;
/* -----------------------------------------------------------&#xD;
   Purpose:&#xD;
   Parameters:  &lt;none&gt;&#xD;
   Notes:&#xD;
 -------------------------------------------------------------*/&#xD;
&#xD;
END PROCEDURE. /* PROCEDURE [+ProcedureName+]*/&#xD;
</Template><Template Name="function" Comments="0" Strings="0">FUNCTION [+functionName+] RETURNS [+returnformat+]([+parameter+] as [+parameterFormat+]):&#xD;
 /* -----------------------------------------------------------&#xD;
    Purpose:&#xD;
    Parameters:  &lt;none&gt;&#xD;
    Notes:&#xD;
  -------------------------------------------------------------*/&#xD;
  &#xD;
  return .&#xD;
END FUNCTION. /*FUNCTION [+functionName+]*/&#xD;
</Template><Template Name="common" Comments="0" Strings="0"> /* -----------------------------------------------------------&#xD;
    Purpose:^&#xD;
    Parameters:  &lt;none&gt;&#xD;
    Notes:&#xD;
  -------------------------------------------------------------*/&#xD;
  </Template><Template Name="do error" Comments="0" Strings="0">DO ON ERROR UNDO, LEAVE:&#xD;
    ^&#xD;
END.</Template><Template Name="&amp;amp;SC" Comments="0" Strings="0">&amp;SCOPED-DEFINE [+VariableName+] "[+VariableValue+]"&#xD;
</Template><Template Name="&amp;amp;SC Label" Comments="0" Strings="0">label {&amp;^}</Template><Template Name="&amp;amp;SD" Comments="0" Strings="0">&amp;GLOBAL-DEFINE [+VariableName+] %\c</Template><Template Name="cimLoad" Comments="0" Strings="0">batchrun = yes.&#xD;
input from value([+bpfilename+] + ".bpi").&#xD;
output to value([+bpfilename+] + ".bpo") keep-messages.&#xD;
hide message no-pause.&#xD;
cimrunprogramloop:&#xD;
do on stop undo cimrunprogramloop,leave cimrunprogramloop:&#xD;
   {gprun.i ""[+procedurefile+]""}&#xD;
end.&#xD;
hide message no-pause.&#xD;
output close.&#xD;
input close.&#xD;
batchrun = no.&#xD;
</Template><Template Name="cimTestProgram" Comments="0" Strings="0"> {mfdeclre.i}&#xD;
 batchrun = yes.&#xD;
 {gprun.i ""[+programName+]""}&#xD;
 batchrun = no.&#xD;
</Template><Template Name="compile program" Comments="0" Strings="0">define variable srcDir as character.&#xD;
define variable destDir as character.&#xD;
define variable src as character.&#xD;
assign src = "[+sourceCode+]".&#xD;
assign srcDir = "[+SourceDirectory+],".&#xD;
assign destDir = "[+DestDirectory+]".&#xD;
propath = srcDir + propath.&#xD;
compile value(src) save into value(destDir).&#xD;
propath = substring(propath,length(srcDir) + 1).&#xD;
</Template><Template Name="pxmsg.i" Comments="0" Strings="0">{pxmsg.i &amp;MSGNUM=[+messagenumber+] &amp;ERRORLEVEL=1 &amp;MSGBUFFER=lit-text}&#xD;
{pxmsg.i &amp;MSGNUM=[+messagenumber+] &amp;ERRORLEVEL={&amp;INFORMATION-RESULT} &amp;CONFIRM=yn} &#xD;
{mfmsg.i [+messagenumber+] 3}&#xD;
{mfmsg01.i [+messagenumber+] 2 yn}</Template><Template Name="message View-as Alert-box" Comments="0" Strings="0">message ^ view-as alert-box.&#xD;
</Template><Template Name="TestProgramCanRollBack" Comments="0" Strings="0">do transaction on endkey undo, leave:&#xD;
   run [+programName+].&#xD;
   message "Undo".&#xD;
   pause.&#xD;
   undo.&#xD;
end.</Template><Template Name="checklv" Comments="0" Strings="0">{xxchklv.i '[+MODEL-CAN-RUN+]' 10}&#xD;
</Template><Template Name="repeatwithframe" Comments="0" Strings="0">repeat with frame [+frameName+]:&#xD;
&#xD;
end.</Template><Template Name="V8:ConvertMode" Comments="0" Strings="0">/* [+procedureName+] - [+procedureDesc+]                                                 */&#xD;
/*V8:ConvertMode=[+Maintenance+]                                                 */&#xD;
/* Environment: Progress:10.1B   QAD:eb21sp7    Interface:Character          */&#xD;
/* REVISION: 24YP LAST MODIFIED: 04/24/12 BY: zy expand xrc length to 120    */&#xD;
/* REVISION END                                                              */&#xD;
&#xD;
</Template><Template Name="{gpcdget.i &amp;quot;UT&amp;quot;}" Comments="0" Strings="0">{gpcdget.i "UT"}&#xD;
</Template></Templates>
