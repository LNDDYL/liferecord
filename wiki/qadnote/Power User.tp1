<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="~tmp1" Description="" Comments="0" Strings="0">/*140516.1 </Template><Template Name="~tmp2" Description="" Comments="0" Strings="0"> */</Template><Template Name="~tmp3" Description="" Comments="0" Strings="0">/*140516.1*/ </Template><Template Name="~tmp4" Description="" Comments="0" Strings="0">140530.1</Template><Template Name="V8:ConvertMode" Comments="0" Strings="0" Description="">/* [FILE_NAME][FILE_EXTENSION] - [+procedureDesc+]                                                 */&#xD;
/*V8:ConvertMode=Maintenance                                                 */&#xD;
/* Environment: Progress:10.1B   QAD:eb21sp7    Interface:Character          */&#xD;
/* REVISION: 120713.1 LAST MODIFIED: 07/13/12 BY: zy                         */&#xD;
/* REVISION END                                                              */&#xD;
</Template><Template Name="date-today" Description="" Comments="0" Strings="0">/* [DATE_USER]yyMMdd[DATE_USER_END].1  - Start */&#xD;
</Template><Template Name="defChar" Comments="0" Strings="0" Description="">define variable ^ as character no-undo.&#xD;
</Template><Template Name="defLike" Comments="0" Strings="0" Description="">define variable ^ like no-undo.&#xD;
</Template><Template Name="defInteger" Comments="0" Strings="0" Description="">define variable ^ as integer no-undo.&#xD;
</Template><Template Name="defDecimal" Comments="0" Strings="0" Description="">define variable ^ as decimal no-undo.&#xD;
</Template><Template Name="defDate" Comments="0" Strings="0" Description="">define variable ^ as date no-undo.&#xD;
</Template><Template Name="defLogical" Comments="0" Strings="0" Description="">define variable ^ as logical no-undo.&#xD;
</Template><Template Name="defTempTable" Comments="0" Strings="0" Description="">Define temp-table [+tablename+]&#xD;
       fields [+fieldname+] as [+fieldtype+]&#xD;
       index is primary [+indexname+] [+fieldname+].&#xD;
</Template><Template Name="defShared" Description="" Comments="0" Strings="0">&amp;IF DEFINED(NOSHARED) = 0 &amp;THEN  /* ref:mfdeclre.i */&#xD;
    define {1} shared variable [+variable+] as character.&#xD;
&amp;ELSE&#xD;
&amp;ENDIF</Template><Template Name="for each" Comments="0" Strings="0" Description="">for each ^ no-lock where :&#xD;
&#xD;
end.&#xD;
</Template><Template Name="procedure" Comments="0" Strings="0" Description="">PROCEDURE [+ProcedureName+]:&#xD;
/* -----------------------------------------------------------&#xD;
   Purpose:&#xD;
   Parameters:  &lt;none&gt;&#xD;
   Notes:&#xD;
 -------------------------------------------------------------*/&#xD;
&#xD;
END PROCEDURE. /* PROCEDURE [+ProcedureName+]*/&#xD;
</Template><Template Name="function" Comments="0" Strings="0" Description="">FUNCTION [+functionName+] RETURNS [+returnformat+]([+parameter+] as [+parameterFormat+]) forward.&#xD;
FUNCTION [+functionName+] RETURNS [+returnformat+]([+parameter+] as [+parameterFormat+]):&#xD;
 /* -----------------------------------------------------------&#xD;
    Purpose:&#xD;
    Parameters:  &lt;none&gt;&#xD;
    Notes:&#xD;
  -------------------------------------------------------------*/&#xD;
  &#xD;
  return .&#xD;
END FUNCTION. /*FUNCTION [+functionName+]*/&#xD;
</Template><Template Name="comment" Comments="0" Strings="0" Description=""> /* -----------------------------------------------------------&#xD;
    Purpose:^&#xD;
    Parameters:  &lt;none&gt;&#xD;
    Notes:&#xD;
  -------------------------------------------------------------*/&#xD;
  </Template><Template Name="do error" Comments="0" Strings="0" Description="">DO ON ERROR UNDO, LEAVE:&#xD;
    ^&#xD;
END.</Template><Template Name="&amp;amp;SC" Comments="0" Strings="0" Description="">&amp;SCOPED-DEFINE [+VariableName+] "[+VariableValue+]"&#xD;
</Template><Template Name="&amp;amp;SC Label" Comments="0" Strings="0" Description="">label {&amp;^}</Template><Template Name="&amp;amp;SD" Comments="0" Strings="0" Description="">&amp;GLOBAL-DEFINE [+VariableName+] [+Value+]</Template><Template Name="cimLoad" Comments="0" Strings="0" Description="">pause 0 before-hide.&#xD;
batchrun = yes.&#xD;
input from value([+bpfilename+] + ".bpi").&#xD;
output to value([+bpfilename+] + ".bpo") keep-messages.&#xD;
hide message no-pause.&#xD;
cimrunprogramloop:&#xD;
do transaction on stop undo cimrunprogramloop,leave cimrunprogramloop:&#xD;
   {gprun.i ""[+procedurefile+]""}&#xD;
end.&#xD;
hide message no-pause.&#xD;
output close.&#xD;
input close.&#xD;
batchrun = no.&#xD;
pause before-hide.&#xD;
</Template><Template Name="cimTestProgram" Comments="0" Strings="0" Description="">{mfdeclre.i}&#xD;
batchrun = yes.&#xD;
{gprun.i ""[+programName+]""}&#xD;
batchrun = no.&#xD;
</Template><Template Name="compile program" Comments="0" Strings="0" Description="">define variable srcDir as character.&#xD;
define variable destDir as character.&#xD;
define variable src as character.&#xD;
assign src = "[+sourceCode+]".&#xD;
assign srcDir = "[+SourceDirectory+]".&#xD;
assign destDir = "[+DestDirectory+]".&#xD;
propath = srcDir + "," + propath.&#xD;
compile value(src) save into value(destDir).&#xD;
propath = substring(propath,length(srcDir) + 1).&#xD;
</Template><Template Name="from" Comments="0" Strings="0" Description="">form&#xD;
   space(1)&#xD;
    &#xD;
with frame [+formname+] side-labels width 80 attr-space&#xD;
/*V8! title color normal (getFrameTitle([+"LabelTerm"+],60)) */.&#xD;
setFrameLabels(frame [+formname+]:handle).&#xD;
</Template><Template Name="pxmsg.i" Comments="0" Strings="0" Description="">{pxmsg.i &amp;MSGNUM=[+messagenumber+]&#xD;
         &amp;MSGTEXT=[+Text+]&#xD;
         &amp;MSGARG1=[+ARG1+]&#xD;
         &amp;CONFIRM=[+Variable+]&#xD;
         &amp;MSGBUFFER=[+buffer+]&#xD;
         &amp;ERRORLEVEL=[+3+]}&#xD;
</Template><Template Name="mfmsg.i" Comments="0" Strings="0" Description="">{mfmsg.i [+messagenumber+] [+ERRORLEVEL+]}&#xD;
</Template><Template Name="mfmsg01.i" Comments="0" Strings="0" Description="">{mfmsg01.i [+messagenumber+] [+1-normal/2-warning/3-error+] [+variable to update+]}&#xD;
</Template><Template Name="message View-as Alert-box" Comments="0" Strings="0" Description="">message [+replace(propath,",",chr(10))+] view-as alert-box.&#xD;
</Template><Template Name="msgtestprogram" Comments="0" Strings="0" Description="">/*test01*/  message [+message+] view-as alert-box.</Template><Template Name="TestProgramCanRollBack" Comments="0" Strings="0" Description="">do transaction on endkey undo, leave:&#xD;
   run [+programName+].&#xD;
   message "Undo".&#xD;
   pause.&#xD;
   undo.&#xD;
end.&#xD;
</Template><Template Name="checklv" Comments="0" Strings="0" Description="">{xxchklv.i '[+MODEL-CAN-RUN+]' 10}&#xD;
</Template><Template Name="repeatwithframe" Comments="0" Strings="0" Description="">repeat with frame [+frameName+]:&#xD;
&#xD;
end. /* repeat with frame [+frameName+]: */</Template><Template Name="{gpcdget.i &amp;quot;UT&amp;quot;}" Comments="0" Strings="0" Description="">{gpcdget.i "UT"}&#xD;
</Template><Template Name="{gprun.i}" Comments="0" Strings="0" Description="">{mfdeclre.i}&#xD;
{gprun.i ""[+programname+].p"" "(input [+parameter+])"}&#xD;
</Template><Template Name="mainloop" Comments="0" Strings="0" Description="">[+mainloop+]:&#xD;
do on error undo [+mainloop+], retry [+mainloop+]&#xD;
   on endkey undo [+mainloop+], leave [+mainloop+]:&#xD;
&#xD;
end. /* do on error undo [+mainloop+] */&#xD;
</Template><Template Name="viewas fill-in" Comments="0" Strings="0" Description="">view-as [+fill-in+] [+editor+] size [+sizeNumber+] by 1 </Template><Template Name="printer120" Comments="0" Strings="0" Description="">{mfselprt.i "printer" 120}</Template><Template Name="{mfphead2.i}" Comments="0" Strings="0" Description="">{mfphead2.i}  /* PRINT PAGE HEADING FOR REPORTS 80 COLUMNS */&#xD;
{mfselprt.i "terminal" 80}&#xD;
{mftrl080.i}  /* REPORT TRAILER */</Template><Template Name="apply" Comments="0" Strings="0" Description="">APPLY "[+Procedure+]" TO [+Control+].</Template><Template Name="trRecid" Comments="0" Strings="0" Description="">define variable trrecid as recid.&#xD;
assign trrecid = current-value(tr_sq01).&#xD;
 where tr_trnbr   &gt; integer(trrecid).</Template><Template Name="session:date-format" Comments="0" Strings="0" Description="">session:date-format = '[+mdy+]'.</Template><Template Name="SESSION:SET-WAIT-STATE(&amp;quot;GENERAL&amp;quot;)." Description="" Comments="0" Strings="0">SESSION:SET-WAIT-STATE("[+GENERAL+]").</Template><Template Name="status input" Description="" Comments="0" Strings="0">status input [+message+].</Template><Template Name="os-getenv" Comments="0" Strings="0" Description="">OS-GETENV([+environment-variable+]) </Template><Template Name="dirExists" Comments="0" Strings="0" Description="">FILE-INFO:FILE-NAME = "[+DirName+]".&#xD;
IF FILE-INFO:FILE-TYPE = ? THEN DO:&#xD;
     /* The directory is invalid */&#xD;
     {mfmsg.i 3679 3}&#xD;
     undo, retry.&#xD;
END.&#xD;
</Template><Template Name="R-INDEX" Comments="0" Strings="0" Description="">R-INDEX ( [+source+] , [+target+] [+[,starting ]+] )</Template><Template Name="chkInputNumber" Comments="0" Strings="0" Description="">   DO i = 1 to length([+source+]).&#xD;
      If index("0987654321.", substring([+source+],i,1)) = 0 then do:&#xD;
      end.&#xD;
   end.</Template><Template Name="error-status:error" Description="" Comments="0" Strings="0">if error-status:error then do:&#xD;
end.</Template><Template Name="defpwd" Description="" Comments="0" Strings="0">define variable passwd as character label "Password" format "x(16)"&#xD;
   case-sensitive no-undo.</Template><Template Name="mfdemo.i" Description="" Comments="0" Strings="0">{mfdemo.i [+01/01/1900+] [+01/01/9999+]} /* ref mf1.p */</Template><Template Name="getOSUserid" Description="" Comments="0" Strings="0"> /* This function is standard procedure in mf1.p */</Template><Template Name="setframelabels" Description="" Comments="0" Strings="0">setframelabels(frame [+a+]:handle).</Template><Template Name="next-prompt" Description="" Comments="0" Strings="0">next-prompt [+fieldname+] with frame [+framename+].</Template><Template Name="SerialGeneral" Description="" Comments="0" Strings="0">/*&#x4EA7;&#x751F;&#x5355;&#x53F7;  GN */&#xD;
&#x6CE8;&#x610F;&#xFF1A;seq-internal = yes&#xD;
/*GN*/ {mfdeclre.i}&#xD;
/*GN*/ define variable v_number as character format "x(12)".&#xD;
/*GN*/ define variable errorst as logical.&#xD;
/*GN*/ define variable errornum as integer.&#xD;
/*GN*/ define variable xx as character initial "xxwa_det".&#xD;
/*GN*/&#xD;
/*GN*/ {gprun.i ""gpnrmgv.p"" "(xx,input-output v_number, output errorst&#xD;
/*GN*/                           ,output errornum)" }&#xD;
/*GN*/&#xD;
/*GN*/ message "v_number:" v_number skip&#xD;
/*GN*/        "errorst:" errorst skip&#xD;
/*GN*/       "errornum:" errornum&#xD;
/*GN*/ view-as alert-box.</Template><Template Name="RunWithoutLogin" Description="" Comments="0" Strings="0">session:date-format = 'mdy'.&#xD;
{mfdeclre.i "new global"}&#xD;
{mf1.i "new global"}&#xD;
&#xD;
define variable v_i as integer.&#xD;
do on error undo, return error {&amp;GENERAL-APP-EXCEPT}:&#xD;
      hi_char = chr(1).&#xD;
&#xD;
      do v_i = 2 to 131071:&#xD;
         if chr(v_i) &gt; hi_char then hi_char = chr(v_i).&#xD;
      end. /*DO i = 2 to 131071*/&#xD;
&#xD;
      assign&#xD;
         hi_date = 12/31/3999&#xD;
         low_date = 01/01/1900.&#xD;
end.&#xD;
&#xD;
base_curr = "RMB".&#xD;
global_userid = "MFG".&#xD;
mfguser = "".&#xD;
global_user_lang = "us".&#xD;
global_user_lang_dir = "us/".&#xD;
global_domain = "DCEC".&#xD;
global_db = "DCEC".&#xD;
execname = "zzbkflh.p".&#xD;
&#xD;
/*G1MN*/ {gpglefv.i}&#xD;
</Template><Template Name="gpfildel.i" Description="" Comments="0" Strings="0">{gpfildel.i &amp;filename=mfbatch} /* ref mgbatch.p */</Template><Template Name="batchRunWithPause0" Description="" Comments="0" Strings="0">&#xD;
         input from value(mfbatch) /*V8! no-echo */ .&#xD;
         /*&#xD;
          * RE-ADDED 'pause 0 before-hide' STATEMENT TO BATCH PROCESSOR DUE TO&#xD;
          * SOME PROGRAMS (drmpnc.p, drmprc.p) STILL DISPLAY 'press space bar to&#xD;
          * continue' WHEN RUN IN BATCH MODE.  AFTER DISCUSSING WITH EMB AND JCD&#xD;
          * IT WAS AGREED THAT THE 'pause 0 before-hide' STANDARD VIOLATION WAS&#xD;
          * THE ONLY WAY TO SUPRESS *ALL* MESSAGES THAT COULD BE DISPLAYED&#xD;
          * FROM A PROGRAM DURING BATCH. PLEASE NOTE THAT WHEN SUBMITTING THIS&#xD;
          * PROGRAM, A STANDARDS VIOLATION ERROR WILL BE ISSUED. CONTACT DEV&#xD;
          * SUPPORT IN ORDER TO SUBMIT THIS PROGRAM.  IF YOU PLAN ON CHANGING&#xD;
          * THIS CODE, PLEASE ENSURE THAT 'press space bar to continue'&#xD;
          * MESSAGES ARE STILL SUPRESSED IN BATCH PROCESSING.&#xD;
          */&#xD;
&#xD;
         pause 0 before-hide.   /* REQUIRED - DO NOT REMOVE */&#xD;
&#xD;
         batchrun = yes.&#xD;
         /*V8!&#xD;
         save-sys-alert = SESSION:SYSTEM-ALERT-BOXES.&#xD;
         save-app-alert = SESSION:APPL-ALERT-BOXES.&#xD;
         SESSION:SYSTEM-ALERT-BOXES = FALSE.&#xD;
         SESSION:APPL-ALERT-BOXES = FALSE.&#xD;
         */&#xD;
&#xD;
         /* BATCH REQUEST EXECUTION IN PROGRESS */&#xD;
         {pxmsg.i &amp;MSGNUM=65 &amp;ERRORLEVEL=1}&#xD;
&#xD;
         /*V8-*/&#xD;
         run value(run_file + ".p").&#xD;
         /*V8+*/&#xD;
&#xD;
         /*V8!&#xD;
         do on error undo, leave on endkey undo, leave:&#xD;
            assign&#xD;
               run_file = run_file + ".p"&#xD;
               l_title = getTermLabel("BATCH",10).&#xD;
            {gprun.i ""gpwinrun.p"" "(run_file, l_title)"}.&#xD;
         end.&#xD;
         SESSION:SYSTEM-ALERT-BOXES = save-sys-alert.&#xD;
         SESSION:APPL-ALERT-BOXES = save-app-alert.&#xD;
         */&#xD;
&#xD;
         pause before-hide.&#xD;
&#xD;
         batchrun = lastbatchrun.&#xD;
         input close.</Template><Template Name="num-entry" Description="" Comments="0" Strings="0">num-entry()</Template><Template Name="import from error" Description="" Comments="0" Strings="0">                define stream s_error.&#xD;
                input stream s_error through grep -e 'ERROR' -e  '~\^~*' value(tempout) 2&gt; /dev/null  no-echo.&#xD;
                repeat:&#xD;
                        import stream s_error unformatted cerrmsg.&#xD;
                        if length(errmsg) + length(cerrmsg) &gt;= 300 then leave.&#xD;
			if old_err &lt;&gt; cerrmsg then do:&#xD;
			   errmsg = errmsg + " " + cerrmsg.&#xD;
			   old_err = cerrmsg.&#xD;
			end.&#xD;
                end.&#xD;
/*&#xD;
                set stream s_error ierror.&#xD;
*/&#xD;
                input stream s_error close.</Template><Template Name="opsys" Description="" Comments="0" Strings="0">          if opsys = "unix" then do:&#xD;
             [++]&#xD;
          end.&#xD;
          else if opsys = "msdos" or opsys = "win32" then do:&#xD;
             &#xD;
          end.</Template><Template Name="windo1u.i" Description="" Comments="0" Strings="0"> /*C:\ss\trunk\nadfinlo\sssoivm1\sssoivm1a.p */</Template><Template Name="gpumconv.p" Description="" Comments="0" Strings="0">/* ref: C:\ss\trunk\nadfinlo\sssoivm1\sssoivm1.p */&#xD;
{gprun.i ""gpumcnv.p""   &#xD;
   "(input  um_um1,      &#xD;
     input  um_um2,    &#xD;
     input  pt_part,      &#xD;
     output trans_conv)"}  </Template><Template Name="swselect.i" Description="" Comments="0" Strings="0">/* ref:C:\ss\trunk\nadfinlo\sssoivm1\sssoivm1.p */</Template><Template Name="getcimerr.p" Description="" Comments="0" Strings="0">  errmsg  = "".&#xD;
        cfile = cfile + ".bpo".&#xD;
       {gprun.i ""xxgetcimerr.p"" "(input cfile,output errmsg)"}&#xD;
       assign xsd_chk = "CIM&#x9519;&#x8BEF;:" + errmsg.</Template><Template Name="program-name" Description="" Comments="0" Strings="0">   define variable i as integer.&#xD;
   define variable t as character.   &#xD;
 &#xD;
   i = 1.&#xD;
   output to "clipboard" append.&#xD;
      REPEAT WHILE (PROGRAM-NAME(i) &lt;&gt; ?):&#xD;
          i = i + 1.&#xD;
          assign t = t + program-name(i).&#xD;
          put unformat program-name(i) skip.&#xD;
      end.&#xD;
   output close.</Template><Template Name="ChkLock" Description="" Comments="0" Strings="0">find first [+TableName+] where [+Condition+] &#xD;
           exclusive-lock no-wait no-erro.&#xD;
     if available [+TableName+]&#xD;
        and not locked [+TableName+]&#xD;
        then [++].&#xD;
        else [++].</Template><Template Name="TRIGGER TABLE WRITE" Description="" Comments="0" Strings="0">on [+find+] [+write+][+assign+] of [+TableName+].[+Field+] do:&#xD;
    message program-name(1) skip&#xD;
            program-name(2) skip&#xD;
            program-name(3) skip&#xD;
            program-name(4) skip&#xD;
            program-name(5) skip&#xD;
            program-name(6) skip&#xD;
            program-name(7) skip&#xD;
            program-name(8) skip&#xD;
            program-name(9)&#xD;
            view-as alert-box.&#xD;
end.&#xD;
run mf.p.</Template><Template Name="global_variable" Description="" Comments="0" Strings="0">{mfdeclre.i "new global"}&#xD;
{mf1.i "new global"}&#xD;
&#xD;
session:date-format = 'dmy'.&#xD;
do on error undo, return error {&amp;GENERAL-APP-EXCEPT}:&#xD;
      hi_char = chr(1).&#xD;
&#xD;
      do v_i = 2 to 131071:&#xD;
         if chr(v_i) &gt; hi_char then hi_char = chr(v_i).&#xD;
      end. /*DO i = 2 to 131071*/&#xD;
&#xD;
      assign&#xD;
         hi_date = 12/31/3999&#xD;
         low_date = 01/01/1900.&#xD;
end.&#xD;
base_curr = [+"RMB"+].&#xD;
global_userid = "MFG".&#xD;
mfguser="".&#xD;
global_user_lang = [+"ch"+].&#xD;
global_user_lang_dir = [+"ch/"+].&#xD;
global_domain = [+Domain+].&#xD;
global_db = [+Domain+].&#xD;
execname = [+Execname+].</Template><Template Name="FormulaR1C1" Description="" Comments="0" Strings="0">:FormulaR1C1</Template><Template Name="stdCost" Description="" Comments="0" Strings="0">{gpsct03.i &amp;cost=sct_cst_tot}  /*ppptrp21.p*/</Template><Template Name="umconv" Description="" Comments="0" Strings="0">{gprun.i ""gpumcnv.p""&#xD;
         "(input  tt1_um,&#xD;
           input  tt1__qad02,&#xD;
           input  tt1_item,&#xD;
           output trans_conv)"}</Template><Template Name="mfnxtseq1.i" Description="" Comments="0" Strings="0">/*ref : mgbdld.p */&#xD;
{mfnxtsq1.i "bdl_mstr.bdl_domain = global_domain&#xD;
                               and bdl_source      = """"&#xD;
                               and"&#xD;
                               bdl_mstr&#xD;
                               bdl_id&#xD;
                               mf_sq04&#xD;
                               next_id}</Template><Template Name="mcpl" Description="" Comments="0" Strings="0">  {gprunp.i "mcpl" "p" "mc-curr-conv"&#xD;
         "(input  mc-rpt-curr,&#xD;
           input  et_report_curr,&#xD;
           input  et_rate1,&#xD;
           input  et_rate2,&#xD;
           input  base_amt,&#xD;
           input  true, /* ROUND */&#xD;
           output et_base_amt,&#xD;
           output mc-error-number)"}&#xD;
/* ref ardriq.p */</Template><Template Name="prompt-for" Description="" Comments="0" Strings="0"> prompt-for [+variable+] editing: &#xD;
  if frame-field = "[+fields+]" then do:&#xD;
     {mfnp05.i abs_mstr abs_id&#xD;
                  "abs_id begins 's' or abs_id begins 'p' "&#xD;
                  abs_shipfrom&#xD;
                  "input abs_shipfrom"}&#xD;
      if recno &lt;&gt; ? then do:&#xD;
      end.&#xD;
  end.&#xD;
  else do:&#xD;
        status input.&#xD;
        readkey.&#xD;
        apply lastkey.&#xD;
  end.&#xD;
end.</Template><Template Name="messagecolorvalue" Description="" Comments="0" Strings="0">/******* message &#x7684;&#x5E95;&#x8272;&#x4E3A;&#x7A7A;     ********/&#xD;
message color value("") fill(" ",66) "test".</Template><Template Name="TMP" Description="" Comments="0" Strings="0">TMP + execname + [+variable+] + ".bpi.prn".</Template><Template Name="debug" Description="" Comments="0" Strings="0">-clientlog [+E:\scripts\bkflh\out\qad.log+] -logginglevel 4 -logentrytypes 4GLTrace </Template><Template Name="ver" Description="" Comments="0" Strings="0">{gprun.i ""gpgetver.p"" "(input '1', output mfgver)"}  /* ref mf1a.p */</Template><Template Name="mfnxtsq1.i" Description="" Comments="0" Strings="0">/** reference mgbdld.p ***/&#xD;
&#xD;
/* CURRENT-VALUE(mf_sq04) = 999999999. */&#xD;
&#xD;
{mfnxtsq1.i "bdl_mstr.bdl_domain = global_domain&#xD;
             and bdl_source      = """"&#xD;
             and"&#xD;
             bdl_mstr&#xD;
             bdl_id&#xD;
             mf_sq04&#xD;
             next_id}&#xD;
</Template><Template Name="log" Description="" Comments="0" Strings="0">-clientlog E:\scripts\bkflh\out\qad.log -logginglevel 4 -logentrytypes 4GLTrace &#xD;
&#xD;
/**ProEditor***********************&#xD;
LOG-MANAGER:LOGFILE-NAME = "CallTest01.log".&#xD;
LOG-MANAGER:LOGGING-LEVEL = 4.&#xD;
LOG-MANAGER:LOG-ENTRY-TYPES = "4GLTrace".&#xD;
      &#xD;
run us/rs/rsporc.r.&#xD;
          &#xD;
LOG-MANAGER:LOGGING-LEVEL = 0.&#xD;
LOG-MANAGER:CLOSE-LOG().&#xD;
***********************************&#xD;
</Template><Template Name="Mail" Description="" Comments="0" Strings="0">/* cat [+File+] | mail -s [+"Title"+] [+Email1,Email2+] */&#xD;
echo [+"Content"+] | mutt -s [+"Title"+] -a [+attachedfile+] [+mail1,mail2,+] # -b [+mail3,mail4+]&#xD;
</Template><Template Name="proutil" Description="" Comments="0" Strings="0">proutil [+db-name+] -C dbanalys &gt;&gt; [+file+]&#xD;
proutil [+db-name+] -C tabanalys &#xD;
proutil [+db-name+] -C truncate bi&#xD;
prostrct add [+db-name+] [+structure-description-file+] [+-validate+]&#xD;
&#xD;
</Template></Templates>
